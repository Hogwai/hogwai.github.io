---
import BaseLayout from './BaseLayout.astro';
import Header from '../components/Header';
import Footer from '../components/Footer';
import TableOfContents from '../components/TableOfContents';
import { type CollectionEntry } from 'astro:content';

type Props = CollectionEntry<'posts'>['data'] & {
  headings?: Array<{ depth: number; slug: string; text: string }>;
};

const { title, description, pubDate, updatedDate, heroImage, tags, headings = [] } = Astro.props;
---

<BaseLayout title={title} description={description}>
  <Header client:load />
  
  <main class="flex-grow bg-gray-50 dark:bg-gray-950">
    <article class="container-custom py-12">
      <div class="mb-8">
        {heroImage && (
          <img 
            src={heroImage} 
            alt={title}
            class="w-full h-64 object-cover rounded-lg mb-6"
          />
        )}
        
        <h1 class="text-4xl md:text-5xl font-bold mb-4 text-gray-900 dark:text-white">{title}</h1>
        
        <div class="flex items-center gap-4 text-gray-600 dark:text-gray-400 text-sm mb-4">
          <time datetime={pubDate.toISOString()}>
            {pubDate.toLocaleDateString('en-GB', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
          {updatedDate && (
            <>
              <span>•</span>
              <time datetime={updatedDate.toISOString()}>
                Mis à jour le {updatedDate.toLocaleDateString('en-GB', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}
              </time>
            </>
          )}
        </div>
        
        {tags.length > 0 && (
          <div class="flex flex-wrap gap-2">
            {tags.map((tag) => (
              <span class="px-3 py-1 bg-blue-100 dark:bg-blue-600/20 text-blue-700 dark:text-blue-400 rounded-full text-sm">
                {tag}
              </span>
            ))}
          </div>
        )}
      </div>
      
      <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
        <div class="lg:col-span-3 prose prose-gray dark:prose-invert prose-lg max-w-none">
          <slot />
        </div>
        
        <aside class="lg:col-span-1">
          <div class="sticky top-24">
            <TableOfContents headings={headings} client:visible />
          </div>
        </aside>
      </div>
    </article>
  </main>
  
  <Footer />
</BaseLayout>